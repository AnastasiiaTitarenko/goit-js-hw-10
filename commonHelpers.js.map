{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["`use strict`;\n// Library\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n \nlet userSelectedDate = null;\nlet currentDate = new Date();\n\nconst startBtn = document.querySelector(`[data-start]`);\nstartBtn.disabled = true;\n\nconst elements = {\n    days: document.querySelector(`[data-days]`),\n    hours: document.querySelector(`[data-hours]`),\n    minutes: document.querySelector(`[data-minutes]`),\n    seconds: document.querySelector(`[data-seconds]`)\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      if (userSelectedDate <= currentDate) {\n          iziToast.error({\n              title: \"Error\",\n              message: \"Please choose a date in the future\",\n              position: \"topRight\",\n          });\n          startBtn.disabled = true;\n      }\n      else {\n          startBtn.disabled = false;\n         \n      }\n    },\n};\n\nflatpickr('#datetime-picker', options);\niziToast.error({ title: \"Alert\", message: \"Please choose a date in the future\" });\n\n\nstartBtn.addEventListener(\"click\", () => {\n    let timerElement = document.querySelector(\".timer\");\n    if (userSelectedDate === null) {\n        return;\n    }\n    let timerInterval = setInterval(() => {\n    let currentDay = new Date().getTime();\n    let timerDistance = userSelectedDate - currentDay;\n        \n    if (timerDistance <= 0) {\n        clearInterval(timerInterval);\n        timerElement.innerText = \"00:00:00:00\";\n    }\n    else {\n        const second = 1000;\n        const minute = second * 60;\n        const hour = minute * 60;\n        const day = hour * 24;\n        let days = Math.floor(timerDistance / day);\n        let hours = Math.floor((timerDistance % (day)) / (hour));\n        let minutes = Math.floor(((timerDistance % (day)) % hour) / (minute));\n        let seconds = Math.floor((((timerDistance % (day)) % hour) % minute) / (second));\n\n        // elements.days.textContent = days.toString().padStart(2, \"0\");\n        // elements.hours.textContent = hours.toString().padStart(2, \"0\");\n        // elements.minutes.textContent = minutes.toString().padStart(2, \"0\");\n        // elements.seconds.textContent = seconds.toString().padStart(2, \"0\");\n\n        timerElement.textContent = `${ days.toString().padStart(2, \"0\") }:${ hours.toString().padStart(2, \"0\") }:${ minutes.toString().padStart(2, \"0\") }:${ seconds.toString().padStart(2, \"0\") }`;\n    }\n    }, 1000);\n});\n\n\n\n\n\n"],"names":["userSelectedDate","currentDate","startBtn","options","selectedDates","iziToast","flatpickr","timerElement","timerInterval","currentDay","timerDistance","days","hours","minutes","seconds"],"mappings":"2GASA,IAAIA,EAAmB,KACnBC,EAAc,IAAI,KAEtB,MAAMC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GAGV,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,cAAc,EACnC,SAAS,cAAc,gBAAgB,EACvC,SAAS,cAAc,gBAAgB,EAGpD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBJ,EAAmBI,EAAc,CAAC,EAC9BJ,GAAoBC,GACpBI,EAAS,MAAM,CACX,MAAO,QACP,QAAS,qCACT,SAAU,UACxB,CAAW,EACDH,EAAS,SAAW,IAGpBA,EAAS,SAAW,EAGzB,CACL,EAEAI,EAAU,mBAAoBH,CAAO,EACrCE,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAGhFH,EAAS,iBAAiB,QAAS,IAAM,CACrC,IAAIK,EAAe,SAAS,cAAc,QAAQ,EAClD,GAAIP,IAAqB,KACrB,OAEJ,IAAIQ,EAAgB,YAAY,IAAM,CACtC,IAAIC,EAAa,IAAI,KAAM,EAAC,QAAO,EAC/BC,EAAgBV,EAAmBS,EAEvC,GAAIC,GAAiB,EACjB,cAAcF,CAAa,EAC3BD,EAAa,UAAY,kBAExB,CAKD,IAAII,EAAO,KAAK,MAAMD,EAAgB,KAAG,EACrCE,EAAQ,KAAK,MAAOF,EAAiB,MAAS,IAAK,EACnDG,EAAU,KAAK,MAAQH,EAAiB,MAAQ,KAAS,GAAO,EAChEI,EAAU,KAAK,MAASJ,EAAiB,MAAQ,KAAQ,IAAW,GAAO,EAO/EH,EAAa,YAAc,GAAII,EAAK,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,IAAMC,EAAM,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,IAAMC,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,IAAMC,EAAQ,SAAQ,EAAG,SAAS,EAAG,GAAG,CAAC,EAC3L,CACA,EAAE,GAAI,CACX,CAAC"}